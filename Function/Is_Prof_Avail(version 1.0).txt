
bool Is_Prof_Avail(int timing, int day, string Prof, int room) {
    vector<string> code;
    //code is the vector that contains all course of the Professor which is passed as argument
    for (int i = 0; i < professor_nameinput.size(); ++i) {
        if (Prof == professor_nameinput[i]) {
            code.push_back(subjectinput[i]);
        }
    }
     //the loop below checks if any course of given Professor is already alocated in this slot or not
if(timing<4)
{
    if(timing>0)
      {
          for(int t=timing-1;t<=timing+1;++t){
            for (int j = 0; j < code.size(); ++j) {
                for (int i = 0; i <= room; ++i) {
                    if (Course_Allocation[i][t][day] == code[j]) {
                        return false;
                    }
                }
            }
          }
     }
     else
     {
        for(int t=timing;t<=timing+1;++t){
         for (int j = 0; j < code.size(); ++j) {
                for (int i = 0; i <= room; ++i) {
                    if (Course_Allocation[i][t][day] == code[j]) {
                        return false;
                    }
                }
            }
         }
     }
}
else
{
           for(int t=timing-1;t<=timing;++t) {
                for (int j = 0; j < code.size(); ++j) {
                    for (int i = 0; i <= room; ++i) {
                        if (Course_Allocation[i][t][day] == code[j]) {
                            return false;
                        }
                    }
                }
              }

}
for(int i=0;i<room;++i)
{
    for(int k=0;k<subjectinput.size();++k)
    {
        if(Course_Allocation[i][timing][day]==subjectinput[k])
        {
            if(((branchinput[k]==branchinput[branch_index])||(string_match(branch_index,k)))&&(semesterinput[k]==semesterinput[branch_index]))
            {
                return false;
            }
        }
    }
}
    return true;
}
